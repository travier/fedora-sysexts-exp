name: "Build sysexts: Fedora CoreOS (stable, x86_64)"

env:
  IMAGE: 'quay.io/fedora/fedora-coreos:stable'
  RELEASE: 'stable'
  NAME: 'Fedora CoreOS'
  SHORTNAME: 'fedora-coreos'
  GH_TOKEN: ${{ github.token }}
  PR: ${{ github.event_name == 'pull_request' }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * MON'
  workflow_dispatch:

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.sysext }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: cilium-cli"
        env:
          SYSEXT: cilium-cli
        run: |
          set -euxo pipefail

          cd "${SYSEXT}"
          if [[ "${PR}" == "true" ]]; then
              diff="$(git diff origin/main HEAD --stat -- . ; git diff origin/main HEAD --stat -- ../sysext.just)"
              if [[ -z "${diff}" ]]; then
                  echo "Skipping: No changes for this sysext in this PR"
                  exit 0
              fi
          fi

          just build ${IMAGE}

      - name: "Publish sysext: cilium-cli"
        env:
          SYSEXT: cilium-cli
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          set -euxo pipefail

          git config --global --add safe.directory "${PWD}"

          # Redefine grep to not fail when there are no matches
          grep() {
            /usr/bin/grep "$@" || test $? = 1
          }

          cd "${SYSEXT}"
          sha256sum *.raw > SHA256SUMS

          arch="$(uname --machine)"
          if [[ "${arch}" == "x86_64" ]]; then
              arch="x86-64"
          else
              arch="aarch64"
          fi

          # FIXME
          VERSION_ID="41"

          VERSION="$(cat ./version)"

          echo "Updating release for this sysext"
          new="$(cat digest inputs scripts | sha256sum)"

          old=""
          release="$(
            gh release list --json tagName \
              | jq -r '.[].tagName' \
              | grep "^${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}$"
          )"
          if [[ -n "${release}" ]]; then
            echo "Fetching info from existing release: ${release}"
            curl --location --output digest.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/digest"
            curl --location --output inputs.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/inputs"
            curl --location --output scripts.old "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/scripts"
            old="$(cat digest.old inputs.old scripts.old | sha256sum)"
          fi

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes in inputs since last release. Skipping."
          else
            echo "Creating new release for: ${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}"

            {
            echo "Release:"
            echo "\`\`\`"
            cat ./SHA256SUMS
            echo "\`\`\`"
            echo ""
            echo "Built using container image:"
            echo "\`\`\`"
            cat ./digest
            echo "\`\`\`"
            echo ""
            echo "Built using input files:"
            echo "\`\`\`"
            cat ./inputs
            echo "\`\`\`"
            echo ""
            echo "Built using scripts:"
            echo "\`\`\`"
            cat ./scripts
            echo "\`\`\`"
            } > notes

            gh release delete \
              --cleanup-tag \
              --yes \
              "${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}" \
              || true

            gh release create \
              --title "${SYSEXT} ${VERSION} for Fedora ${VERSION_ID} (${arch})" \
              --notes-file notes \
              "${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}" \
              --latest=false \
              ./*.raw ./SHA256SUMS ./inputs ./scripts ./digest
          fi

  build-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: cilium-cli"
        env:
          SYSEXT: cilium-cli
        run: |
          set -euxo pipefail

          cd "${SYSEXT}"
          if [[ "${PR}" == "true" ]]; then
              diff="$(git diff origin/main HEAD --stat -- . ; git diff origin/main HEAD --stat -- ../sysext.just)"
              if [[ -z "${diff}" ]]; then
                  echo "Skipping: No changes for this sysext in this PR"
                  exit 0
              fi
          fi

          just build ${IMAGE}

      - name: "Publish sysext: cilium-cli"
        env:
          SYSEXT: cilium-cli
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          set -euxo pipefail

          git config --global --add safe.directory "${PWD}"

          # Redefine grep to not fail when there are no matches
          grep() {
            /usr/bin/grep "$@" || test $? = 1
          }

          cd "${SYSEXT}"
          sha256sum *.raw > SHA256SUMS

          arch="$(uname --machine)"
          if [[ "${arch}" == "x86_64" ]]; then
              arch="x86-64"
          else
              arch="aarch64"
          fi

          # FIXME
          VERSION_ID="41"

          VERSION="$(cat ./version)"

          echo "Updating release for this sysext"
          new="$(cat digest inputs scripts | sha256sum)"

          old=""
          release="$(
            gh release list --json tagName \
              | jq -r '.[].tagName' \
              | grep "^${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}$"
          )"
          if [[ -n "${release}" ]]; then
            echo "Fetching info from existing release: ${release}"
            curl --location --output digest.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/digest"
            curl --location --output inputs.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/inputs"
            curl --location --output scripts.old "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/scripts"
            old="$(cat digest.old inputs.old scripts.old | sha256sum)"
          fi

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes in inputs since last release. Skipping."
          else
            echo "Creating new release for: ${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}"

            {
            echo "Release:"
            echo "\`\`\`"
            cat ./SHA256SUMS
            echo "\`\`\`"
            echo ""
            echo "Built using container image:"
            echo "\`\`\`"
            cat ./digest
            echo "\`\`\`"
            echo ""
            echo "Built using input files:"
            echo "\`\`\`"
            cat ./inputs
            echo "\`\`\`"
            echo ""
            echo "Built using scripts:"
            echo "\`\`\`"
            cat ./scripts
            echo "\`\`\`"
            } > notes

            gh release delete \
              --cleanup-tag \
              --yes \
              "${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}" \
              || true

            gh release create \
              --title "${SYSEXT} ${VERSION} for Fedora ${VERSION_ID} (${arch})" \
              --notes-file notes \
              "${SYSEXT}-${VERSION_ID}-${VERSION}-${arch}" \
              --latest=false \
              ./*.raw ./SHA256SUMS ./inputs ./scripts ./digest
          fi

  publish-sysext-latest:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the builds and versionned release
    needs:
      - build-x86_64
      - build-aarch64
    # Still run if any dependent job fails
    if: ${{ always() }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Update latest release for sysext: cilium-cli"
        env:
          SYSEXT: cilium-cli
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          set -euxo pipefail

          arch="$(uname --machine)"
          if [[ "${arch}" == "x86_64" ]]; then
              arch="x86-64"
          else
              arch="aarch64"
          fi

          releases=(
            $(
              gh release list --json tagName \
                | jq -r '.[].tagName' \
                | grep "^${SYSEXT}-" \
                | grep -v "${SYSEXT}-latest$" \
                | sort -h
            )
          )
          echo "Looking at releases: ${releases[@]}"
          for rel in ${releases[@]}; do
            echo "Fetching SHA256SUMS for release: ${rel}"
            curl --location --output "SHA256SUMS.${rel}" \
              "https://github.com/travier/fedora-sysexts-exp/releases/download/${rel}/SHA256SUMS"
          done
          ls ./SHA256SUMS.* | sort -h | xargs cat > SHA256SUMS
          new="$(cat SHA256SUMS | sha256sum)"

          old=""
          release="$(
            gh release list --json tagName \
              | jq -r '.[].tagName' \
              | grep "^${SYSEXT}-latest$"
          )"
          if [[ -n "${release}" ]]; then
            echo "Fetching SHA256SUMS from existing release: ${release}"
            curl --location --output SHA256SUMS.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/SHA256SUMS"
            old="$(cat SHA256SUMS.old | sha256sum)"
          fi

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes for ${release} since last release. Skipping."
          else
            echo "Creating new release: ${SYSEXT}-latest"

            {
            echo "Releases available:"
            echo "\`\`\`"
            cat ./SHA256SUMS
            echo "\`\`\`"
            } > notes

            gh release delete \
              --cleanup-tag \
              --yes \
              "${SYSEXT}-latest" \
              || true

            gh release create \
              --title "${SYSEXT} for Fedora" \
              --notes-file notes \
              "${SYSEXT}-latest" \
              --latest=false \
              ./SHA256SUMS
          fi

  publish-latest:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the all sysext-latest releases
    needs:
      - publish-sysext-latest
    # Still run if any dependent job fails
    if: ${{ always() }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Update latest release for all sysexts"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          set -euxo pipefail

          arch="$(uname --machine)"
          if [[ "${arch}" == "x86_64" ]]; then
              arch="x86-64"
          else
              arch="aarch64"
          fi

          releases=(
            $(
              gh release list --json tagName \
                | jq -r '.[].tagName' \
                | grep -- "-latest$" \
                | sort -h
            )
          )
          echo "Looking at releases: ${releases[@]}"
          for rel in ${releases[@]}; do
            echo "Fetching SHA256SUMS for release: ${rel}"
            curl --location --output "SHA256SUMS.${rel}" \
              "https://github.com/travier/fedora-sysexts-exp/releases/download/${rel}/SHA256SUMS"
          done
          ls ./SHA256SUMS.* | sort -h | xargs cat > SHA256SUMS
          new="$(cat SHA256SUMS | sha256sum)"

          old=""
          release="$(
            gh release list --json tagName \
              | jq -r '.[].tagName' \
              | grep "^latest$"
          )"
          if [[ -n "${release}" ]]; then
            echo "Fetching SHA256SUMS from existing release: ${release}"
            curl --location --output SHA256SUMS.old  "https://github.com/travier/fedora-sysexts-exp/releases/download/${release}/SHA256SUMS"
            old="$(cat SHA256SUMS.old | sha256sum)"
          fi

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes for ${release} since last release. Skipping."
          else
            echo "Creating new release: latest"

            for rel in ${releases[@]}; do
              s="${rel%-latest}"
              sed "s/%%SYSEXT%%/${s}/g" .workflow-templates/systemd-sysupdate.conf > ${s}.conf
            done

            {
            echo "Releases available:"
            echo "\`\`\`"
            cat ./SHA256SUMS
            echo "\`\`\`"
            } > notes

            gh release delete \
              --cleanup-tag \
              --yes \
              "latest" \
              || true

            gh release create \
              --title "System extensions for Fedora" \
              --notes-file notes \
              "latest" \
              --latest=true \
              ./SHA256SUMS ./*.conf
          fi
