name: "Build sysexts: Fedora 42"

env:
  IMAGE: 'quay.io/fedora-ostree-desktops/base-atomic:42'
  GH_TOKEN: ${{ github.token }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * MON'
  workflow_dispatch:

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.sysext }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: 1password-cli"
        uses: ./.github/actions/build
        with:
          sysext: '1password-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: 1password-gui"
        uses: ./.github/actions/build
        with:
          sysext: '1password-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bitwarden"
        uses: ./.github/actions/build
        with:
          sysext: 'bitwarden'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cloud-hypervisor"
        uses: ./.github/actions/build
        with:
          sysext: 'cloud-hypervisor'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-chrome"
        uses: ./.github/actions/build
        with:
          sysext: 'google-chrome'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: microsoft-edge"
        uses: ./.github/actions/build
        with:
          sysext: 'microsoft-edge'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: 1password-cli"
        uses: ./.github/actions/build
        with:
          sysext: '1password-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: 1password-gui"
        uses: ./.github/actions/build
        with:
          sysext: '1password-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bitwarden"
        uses: ./.github/actions/build
        with:
          sysext: 'bitwarden'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cloud-hypervisor"
        uses: ./.github/actions/build
        with:
          sysext: 'cloud-hypervisor'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-chrome"
        uses: ./.github/actions/build
        with:
          sysext: 'google-chrome'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: microsoft-edge"
        uses: ./.github/actions/build
        with:
          sysext: 'microsoft-edge'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  publish-sysext-latest:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the builds and versionned release
    needs:
      - build-x86_64
      - build-aarch64
    # Still run if any dependent job fails
    # if: ${{ always() }}
    if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Gather versions for sysext: 1password-cli"
        uses: ./.github/actions/gather
        with:
          sysext: '1password-cli'

      - name: "Gather versions for sysext: 1password-gui"
        uses: ./.github/actions/gather
        with:
          sysext: '1password-gui'

      - name: "Gather versions for sysext: bitwarden"
        uses: ./.github/actions/gather
        with:
          sysext: 'bitwarden'

      - name: "Gather versions for sysext: cilium-cli"
        uses: ./.github/actions/gather
        with:
          sysext: 'cilium-cli'

      - name: "Gather versions for sysext: cloud-hypervisor"
        uses: ./.github/actions/gather
        with:
          sysext: 'cloud-hypervisor'

      - name: "Gather versions for sysext: docker-ce"
        uses: ./.github/actions/gather
        with:
          sysext: 'docker-ce'

      - name: "Gather versions for sysext: google-chrome"
        uses: ./.github/actions/gather
        with:
          sysext: 'google-chrome'

      - name: "Gather versions for sysext: incus"
        uses: ./.github/actions/gather
        with:
          sysext: 'incus'

      - name: "Gather versions for sysext: microsoft-edge"
        uses: ./.github/actions/gather
        with:
          sysext: 'microsoft-edge'

      - name: "Gather versions for sysext: mullvad-vpn"
        uses: ./.github/actions/gather
        with:
          sysext: 'mullvad-vpn'

      - name: "Gather versions for sysext: virtctl"
        uses: ./.github/actions/gather
        with:
          sysext: 'virtctl'

      - name: "Gather versions for sysext: vscode"
        uses: ./.github/actions/gather
        with:
          sysext: 'vscode'

      - name: "Gather versions for sysext: vscodium"
        uses: ./.github/actions/gather
        with:
          sysext: 'vscodium'

      - name: "Gather versions for sysext: wasmtime"
        uses: ./.github/actions/gather
        with:
          sysext: 'wasmtime'

      - name: "Gather versions for sysext: youki"
        uses: ./.github/actions/gather
        with:
          sysext: 'youki'

  publish-latest:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/travier/fedora-sysexts-exp/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the all sysext-latest releases
    needs:
      - publish-sysext-latest
    # Still run if any dependent job fails
    # if: ${{ always() }}
    if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Update latest release for all sysexts"
        uses: ./.github/actions/latest
