name := "virtctl"
base_images := "
quay.io/fedora-ostree-desktops/base-atomic:41 x86_64,aarch64
quay.io/fedora-ostree-desktops/base-atomic:42 x86_64,aarch64
"

import '../sysext.just'

all: default

# Custom download step to get the binary
download-manual arch=arch:
    #!/bin/bash
    set -euo pipefail
    # set -x

    mkdir binaries
    cd binaries

    arch="{{arch}}"
    version="1.5.0" # TODO
    if [[ "${arch}" == "x86_64" ]]; then
        sha256sum="100fc12f13f4bdbcf32a2d74c1f4ed7cfd98404496f7b5d2d2ba48b3683aeffa"
        arch="amd64"
    else
        sha256sum="aabcf1571639aa5b9bdbaf005d78b5b2c21ebcf1b2f9f7bdc43caff693077549"
        arch="arm64"
    fi

    echo "⬇️ Downloading virtctl"
    curl --location --fail --output "virtctl-v${version}-linux-${arch}" \
        "https://github.com/kubevirt/kubevirt/releases/download/v${version}/virtctl-v${version}-linux-${arch}"
    echo "${sha256sum}  virtctl-v${version}-linux-${arch}" | sha256sum --check

    curl --location --fail --output LICENSE \
        "https://github.com/kubevirt/kubevirt/raw/refs/heads/main/LICENSE"

    # Version & metadata
    echo "${version}" > ../version
    sha256sum virtctl-v${version}-linux-${arch} LICENSE >> ../inputs

    mv "virtctl-v${version}-linux-${arch}" virtctl

# Skip default recipe
version:
    true

# Custom installation step to install the binary
install-manual:
    #!/bin/bash
    set -euo pipefail
    # set -x

    if [[ "${UID}" == "0" ]]; then
        SUDO=""
    else
        SUDO="sudo"
    fi

    cd rootfs

    echo "➡️ Installing virtctl"
    ${SUDO} install -D -m 755 ../binaries/virtctl  usr/bin/virtctl
    ${SUDO} install -D -m 644 ../binaries/LICENSE usr/share/licenses/virtctl/LICENSE

    ${SUDO} chown -R root: usr
